<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="postCreateAccount-suite.xml" />
	<munit:test name="postCreateAccountFlow-test" doc:id="44d1cf48-f838-4791-bc52-ce00b345785e" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Create object" doc:id="8ca6b68c-ba80-4615-94a1-1239fe511ba1" processor="s3:create-object">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="d57beffc-3091-4d9b-be20-c7e82bfc9431" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://postCreateAccountFlowtest\mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://postCreateAccountFlowtest\mock_variable_.dwl')]" />
						<munit-tools:variable key="insertValue" value="#[output application/java --- readUrl('classpath://postCreateAccountFlowtest\mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="accountSelect" value="#[output application/java --- readUrl('classpath://postCreateAccountFlowtest\mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="account" value="#[output application/json --- readUrl('classpath://postCreateAccountFlowtest\mock_variable_3.dwl')]" mediaType="application/json" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock Select" doc:id="52d1c7a8-c17a-4bcf-b39e-be57f46fb5e7" processor="db:select">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="69b2d2b2-01ad-447c-a4b8-93ef6bd6e513" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json --- readUrl('classpath://postCreateAccountFlowtest\mock_payload1.dwl')]" mediaType="application/json" encoding="UTF-8" />
					<munit-tools:attributes value="#[readUrl('classpath://postCreateAccountFlowtest\mock_attributes.dwl')]" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://postCreateAccountFlowtest\mock_variable_4.dwl')]" />
						<munit-tools:variable key="insertValue" value="#[output application/java --- readUrl('classpath://postCreateAccountFlowtest\mock_variable_5.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="accountSelect" value="#[output application/java --- readUrl('classpath://postCreateAccountFlowtest\mock_variable_6.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="account" value="#[output application/json --- readUrl('classpath://postCreateAccountFlowtest\mock_variable_7.dwl')]" mediaType="application/json" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock Send" doc:id="97c2f22a-aebe-4114-916f-9a16f8de1ff1" processor="email:send">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="aa99f4ff-e033-475f-9d9d-99961d1565d6" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json --- readUrl('classpath://postCreateAccountFlowtest\mock_payload2.dwl')]" mediaType="application/json" encoding="UTF-8" />
					<munit-tools:attributes value="#[readUrl('classpath://postCreateAccountFlowtest\mock_attributes1.dwl')]" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://postCreateAccountFlowtest\mock_variable_8.dwl')]" />
						<munit-tools:variable key="insertValue" value="#[output application/java --- readUrl('classpath://postCreateAccountFlowtest\mock_variable_9.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="accountSelect" value="#[output application/java --- readUrl('classpath://postCreateAccountFlowtest\mock_variable_10.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="account" value="#[output application/json --- readUrl('classpath://postCreateAccountFlowtest\mock_variable_11.dwl')]" mediaType="application/json" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock Insert" doc:id="5354ae4b-4f49-42fa-8fa9-1999bf339170" processor="db:insert">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="ef393aad-7ed7-4622-b80d-43261a22a90c" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json --- readUrl('classpath://postCreateAccountFlowtest\mock_payload3.dwl')]" mediaType="application/json" encoding="UTF-8" />
					<munit-tools:attributes value="#[readUrl('classpath://postCreateAccountFlowtest\mock_attributes2.dwl')]" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://postCreateAccountFlowtest\mock_variable_12.dwl')]" />
						<munit-tools:variable key="insertValue" value="#[output application/java --- readUrl('classpath://postCreateAccountFlowtest\mock_variable_13.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="account" value="#[output application/json --- readUrl('classpath://postCreateAccountFlowtest\mock_variable_14.dwl')]" mediaType="application/json" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="d47e07e6-f69a-44c0-b64a-237c51704d47" >
				<munit:payload value="#[output application/json --- readUrl('classpath://postCreateAccountFlowtest\set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://postCreateAccountFlowtest\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://postCreateAccountFlowtest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to postCreateAccountFlow" doc:id="cffe10d6-cff6-4c5f-8f3b-a02c8b7a9534" name="postCreateAccountFlow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="6e7e0f5b-dd7e-4b25-b84c-50aee3c50921" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import postCreateAccountFlowtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>


</mule>
